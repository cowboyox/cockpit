#!/usr/bin/python
# -*- coding: utf-8 -*-

# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

from testlib import *

import socket
import time

def inject_extras(browser):
    browser.eval_js("""
    dashboard_addresses = function () {
       var addresses = $('#dashboard-hosts .list-group-item').map(function(i,e) { return $(e).data("address"); }).get();
       return addresses;
    }
    """)

def wait_dashboard_addresses(b, expected):
    b.wait_js_func(
        """(function (expected) {
        return expected.sort().toString() == dashboard_addresses().sort().toString();
        })""", expected)

def add_machine(b, address):
    b.click('#dashboard-add')
    b.wait_popup('dashboard_setup_server_dialog')
    b.set_val('#dashboard_setup_address', address)
    b.wait_text('#dashboard_setup_next', "Next")
    b.click('#dashboard_setup_next')
    b.wait_text('#dashboard_setup_next', "Add host")
    b.click('#dashboard_setup_next')
    b.wait_text('#dashboard_setup_next', "Close")
    b.click('#dashboard_setup_next')
    b.wait_popdown('dashboard_setup_server_dialog')

class TestMultiOS(MachineCase):
    def testBasic(self):
        dev_m = self.machine
        dev_b = self.browser

        c7_m = self.new_machine(flavor='stock', system='centos-7')
        c7_m.start()
        c7_m.wait_boot()
        c7_b = self.new_browser(c7_m.address)

        self.allow_journal_messages(".*: .* host key for server is not known: .*")

        c7_b.login_and_go("dashboard", href="/dashboard/list", host=None)
        inject_extras(c7_b)
        wait_dashboard_addresses (c7_b, [ "localhost" ])

        add_machine(c7_b, dev_m.address)
        wait_dashboard_addresses (c7_b, [ "localhost", dev_m.address ])

        self.login_and_go("dashboard", href="dashboard/list", host=None)
        inject_extras(dev_b)
        wait_dashboard_addresses (dev_b, [ "localhost" ])

        add_machine(dev_b, c7_m.address)
        wait_dashboard_addresses (dev_b, [ "localhost", c7_m.address ])

test_main()
